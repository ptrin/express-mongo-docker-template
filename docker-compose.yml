version: '3'

services:
  api:
    build: ./api
    env_file:
      - ./environment/api.env
    ports:
      - "3002:3002"
    environment:
      - PORT=3002
    command: ["sh", "-c", "npm install && npm run dev"]
    links:
      - mongo
    depends_on:
      - mongo
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/metrics"]
      interval: 10s
      timeout: 5s
      retries: 5

  mongo:
    image: mongo
    env_file:
      - ./environment/mongodb.env
    volumes:
      - ./docker-entrypoint-initdb.d/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      - ./docker-entrypoint-initdb.d/init-mongo.sh:/docker-entrypoint-initdb.d/init-mongo.sh:ro
      - ./docker-entrypoint-initdb.d/users.json:/tmp/users.json:ro
      - ./docker-entrypoint-initdb.d/testerEngagementSummaries.json:/tmp/testerEngagementSummaries.json:ro

    ports:
      - 27017:27017

  react:
    build:
      context: ./my-app
    ports:
      - "3000:3000"
    environment:
      - CHOKIDAR_USEPOLLING=true
      - REACT_APP_API_URL=http://127.0.0.1:3002/
    volumes:
    - ./my-app:/app  # Mount the local directory to the container
    command: ["sh", "-c", "npm install && npm start"]
    depends_on:
      api:
        condition: service_healthy
